@model realTimePolls.Models.PollsViewModel
@* @if (Model != null) 
{
   <ol> 
    <li>@Model.Poll.Title</li>
    <li>@Model.Poll.FirstOption</li>
    <li>@Model.Poll.SecondOption</li>
    <li>FirstVotes: @Model.Poll.FirstVotes</li>
    <li>SecondVotes: @Model.Poll.SecondVotes</li>
   </ol>
} 
If userPoll Id is null. if so, then have nothing checked
//dont have an int for first and second votes, just have a map table and use COUNT
elif the 
*@
<form asp-controller="Poll" asp-action="Vote" method="post" id="form">
    <div class="vote-flex">
        <label for="VoteFirst">Vote First Option</label><br>
        <input type="radio" id="vote-first" name="vote" value="Vote First" checked=true>
        <br/>
        <label for="VoteSecond">Vote Second Option</label><br>
        <input type="radio" id="vote-second" name="vote" value="Vote Second" >
        <br />

        <input type="hidden" name="pollid" value="@Model.Poll.Id" />
        <input type="hidden" name="userid" value="@Model.Poll.UserId" />

        <button type="submit"> Submit Vote</button>
    </div>
</form>
<script>
    console.log(@Html.Raw(Json.Serialize(Model)))
    console.log(test)

    function getFormValue(e) {
        e.preventDefault();
        const voteFirst = document.getElementById("vote-first").value;
        const voteSecond = document.getElementById("vote-second").value;
        const hiddenInput = document.getElementById("hidden-input").value
        console.log(voteFirst)
        console.log(voteSecond);
        console.log(hiddenInput)
    }
</script>